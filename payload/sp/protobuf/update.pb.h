/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7-dev */

#ifndef PB_UPDATE_PB_H_INCLUDED
#define PB_UPDATE_PB_H_INCLUDED
#include <nanopb/pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _UpdateMessage {
    bool wants_update;
    uint32_t version_major;
    uint32_t version_minor;
    uint32_t version_patch;
    uint32_t game_name;
    uint32_t host_platform;
} UpdateMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define UpdateMessage_init_default               {0, 0, 0, 0, 0, 0}
#define UpdateMessage_init_zero                  {0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define UpdateMessage_wants_update_tag           1
#define UpdateMessage_version_major_tag          2
#define UpdateMessage_version_minor_tag          3
#define UpdateMessage_version_patch_tag          4
#define UpdateMessage_game_name_tag              5
#define UpdateMessage_host_platform_tag          6

/* Struct field encoding specification for nanopb */
#define UpdateMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, BOOL,     wants_update,      1) \
X(a, STATIC,   REQUIRED, UINT32,   version_major,     2) \
X(a, STATIC,   REQUIRED, UINT32,   version_minor,     3) \
X(a, STATIC,   REQUIRED, UINT32,   version_patch,     4) \
X(a, STATIC,   REQUIRED, UINT32,   game_name,         5) \
X(a, STATIC,   REQUIRED, UINT32,   host_platform,     6)
#define UpdateMessage_CALLBACK NULL
#define UpdateMessage_DEFAULT NULL

extern const pb_msgdesc_t UpdateMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define UpdateMessage_fields &UpdateMessage_msg

/* Maximum encoded size of messages (where known) */
#define UpdateMessage_size                       32

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
