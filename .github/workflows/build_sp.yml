name: Build MKW-SP

on:
  push:
    paths-ignore:
      - 'www/**'
      - 'tools/**'
      - '.github/workflows/run_tidy.yml'
      - '.github/workflows/clean_bmg.yml'
      - '.github/workflows/build_tools.yml'
  pull_request:
    paths-ignore:
      - 'www/**'
      - 'tools/**'
      - '.github/workflows/run_tidy.yml'
      - '.github/workflows/clean_bmg.yml'
      - '.github/workflows/build_tools.yml'

jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        profile:
          - debug
          - test
    runs-on: ubuntu-20.04
    env:
      DEVKITPPC: opt/devkitpro/devkitPPC
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache DevkitPPC
        id: cache-1
        uses: actions/cache@v3
        with:
          path: cache
          key: ${{ runner.os }}-cache-dkp-r43.3
      - name: Download devkitPPC
        if: steps.cache-1.outputs.cache-hit != 'true'
        run: |
          mkdir cache && cd cache
          wget "https://wii.leseratte10.de/devkitPro/devkitPPC/r43%20%282023-04-29%29/devkitPPC-r43-3-linux_x86_64.pkg.tar.zst"
          cd ..
      - name: Extract devkitPPC
        run: tar -xf cache/devkitPPC-r43-3-linux_x86_64.pkg.tar.zst
      - name: Install ninja
        run: sudo apt install ninja-build
      - name: Install protoc
        run: sudo apt install protobuf-compiler
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install json5
        run: pip install json5
      - name: Install pyelftools
        run: pip install pyelftools
      - name: Install itanium_demangler
        run: pip install itanium_demangler
      - name: Install protobuf
        run: pip install protobuf
      - name: Compile
        run: ./build.py --ci -- ${{ matrix.profile }}
      - name: Upload result
        uses: actions/upload-artifact@v3
        with:
          name: mkw-sp-${{ matrix.profile }}
          path: out/${{ matrix.profile }}

  format:
    name: Format
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install clang-format
        run: sudo apt-get update && sudo apt-get install clang-format-15
      - name: Format MKW-SP
        run: |
          dirs="common include loader payload stub"
          find $dirs -regex '.*\.\(c\|h\|cc\|hh\)' | xargs clang-format-15 --dry-run -Werror
